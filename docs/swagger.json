{
    "swagger": "2.0",
    "info": {
        "description": "API pour le projet PEC2 Backend",
        "title": "API PEC2 Backend",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/contact": {
            "post": {
                "description": "Submit a new contact request with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Create a new contact request",
                "parameters": [
                    {
                        "description": "Contact information",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContactCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: Contact request submitted successfully, id: contact ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of all contact requests (Admin access only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Get all contact requests (Admin)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Contact"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "error: Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contacts/{id}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the status of a contact request (Admin access only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Update contact status (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update information",
                        "name": "statusUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContactStatusUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Contact status updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: Contact not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "user login with credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token: JWT token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "error: Wrong credentials or email not verified",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "error: JWT not generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create a new user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: User created successfully, email: user email",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "error: Email already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error: Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of all users (Admin access only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users (Admin)",
                "responses": {
                    "200": {
                        "description": "users: array of user objects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "error: Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user's password by verifying the old password and setting a new one",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "description": "Password update information",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PasswordUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Password updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "error: Invalid old password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Error updating password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current authenticated user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "user: user object",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Error retrieving profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the current authenticated user's profile information with optional profile picture",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserName",
                        "name": "userName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "First name",
                        "name": "firstName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Last name",
                        "name": "lastName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Biography",
                        "name": "bio",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Sexe",
                        "name": "sexe",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "BirthDayDate",
                        "name": "birthDayDate",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Profile picture image file",
                        "name": "profilePicture",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Profile updated successfully, user: updated user object",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Error updating profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/statistics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get count of users by month or year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter type: 'month' or 'year'",
                        "name": "filter",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Year to filter by (default is current year)",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Month to filter by (1-12, only used with 'month' filter)",
                        "name": "month",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users.UserStatsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Invalid filter parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Error retrieving statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/valid-email/{token}": {
            "get": {
                "description": "After create account, user valid it email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validation email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token sent in the URL",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"User validate account",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: User already validated account",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "error: user not found or can't decode JWT",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "description": "model for user login",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "utilisateur@exemple.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "Motdepasse123"
                }
            }
        },
        "models.Contact": {
            "description": "Modèle complet d'une demande de contact",
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "message",
                "subject"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.StatusType"
                },
                "subject": {
                    "type": "string"
                },
                "submittedAt": {
                    "type": "string"
                }
            }
        },
        "models.ContactCreate": {
            "description": "modèle pour créer une demande de contact",
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "message",
                "subject"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jean.dupont@exemple.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "Jean"
                },
                "lastName": {
                    "type": "string",
                    "example": "Dupont"
                },
                "message": {
                    "type": "string",
                    "example": "J'aimerais avoir plus d'informations sur vos services."
                },
                "subject": {
                    "type": "string",
                    "example": "Demande d'information"
                }
            }
        },
        "models.ContactStatusUpdate": {
            "description": "modèle pour mettre à jour le statut d'une demande de contact",
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.StatusType"
                        }
                    ],
                    "example": "processing"
                }
            }
        },
        "models.PasswordUpdate": {
            "description": "modèle pour mettre à jour le mot de passe d'un utilisateur",
            "type": "object",
            "required": [
                "newPassword",
                "oldPassword"
            ],
            "properties": {
                "newPassword": {
                    "type": "string",
                    "minLength": 6,
                    "example": "NouveauMotdepasse123"
                },
                "oldPassword": {
                    "type": "string",
                    "example": "AncienMotdepasse123"
                }
            }
        },
        "models.Sexe": {
            "type": "string",
            "enum": [
                "MAN",
                "WOMAN",
                "OTHER"
            ],
            "x-enum-varnames": [
                "Male",
                "Female",
                "Other"
            ]
        },
        "models.StatusType": {
            "type": "string",
            "enum": [
                "open",
                "processing",
                "closed",
                "rejected"
            ],
            "x-enum-varnames": [
                "StatusOpen",
                "StatusProcessing",
                "StatusClosed",
                "StatusRejected"
            ]
        },
        "models.UserCreate": {
            "description": "model for create a user",
            "type": "object",
            "required": [
                "birthDayDate",
                "email",
                "firstName",
                "lastName",
                "password",
                "sexe",
                "userName"
            ],
            "properties": {
                "birthDayDate": {
                    "type": "string",
                    "example": "1990-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "utilisateur@exemple.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "Jean"
                },
                "lastName": {
                    "type": "string",
                    "example": "Dupont"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "Motdepasse123"
                },
                "sexe": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Sexe"
                        }
                    ],
                    "example": "MAN"
                },
                "userName": {
                    "type": "string",
                    "example": "utilisateur123"
                }
            }
        },
        "users.UserStatsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Entrez le JWT avec le préfixe Bearer: Bearer \u003cJWT\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}