basePath: /
definitions:
  models.Contact:
    description: Modèle complet d'une demande de contact
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      message:
        type: string
      subject:
        type: string
      submittedAt:
        type: string
    required:
    - email
    - firstName
    - lastName
    - message
    - subject
    type: object
  models.ContactCreate:
    description: modèle pour créer une demande de contact
    properties:
      email:
        example: jean.dupont@exemple.com
        type: string
      firstName:
        example: Jean
        type: string
      lastName:
        example: Dupont
        type: string
      message:
        example: J'aimerais avoir plus d'informations sur vos services.
        type: string
      subject:
        example: Demande d'information
        type: string
    required:
    - email
    - firstName
    - lastName
    - message
    - subject
    type: object
  models.UserCreate:
    description: model for create a user
    properties:
      email:
        example: utilisateur@exemple.com
        type: string
      password:
        example: Motdepasse123
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: API pour le projet PEC2 Backend
  title: API PEC2 Backend
  version: "1.0"
paths:
  /contact:
    post:
      consumes:
      - application/json
      description: Submit a new contact request with the provided information
      parameters:
      - description: Contact information
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/models.ContactCreate'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: Contact request submitted successfully, id: contact
            ID'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Invalid input'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: Error message'
          schema:
            additionalProperties: true
            type: object
      summary: Create a new contact request
      tags:
      - contacts
  /contacts:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all contact requests
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/models.Contact'
              type: array
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all contact requests
      tags:
      - contacts
  /login:
    post:
      consumes:
      - application/json
      description: user login with credential
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: User created successfully, email: user email'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Invalid input'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'error: Wrong credentials or email not verified'
          schema:
            additionalProperties: true
            type: object
        "422":
          description: 'error: JWT not generated'
          schema:
            additionalProperties: true
            type: object
      summary: user login
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: User created successfully, email: user email'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Invalid input'
          schema:
            additionalProperties: true
            type: object
        "409":
          description: 'error: Email already exists'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: Error message'
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - auth
swagger: "2.0"
